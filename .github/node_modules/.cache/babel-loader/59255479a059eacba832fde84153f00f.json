{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\Feedback\\\\Feedback.jsx\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleGood = () => {\n      this.setState(prevState => ({\n        good: prevState.good + 1\n      }));\n    };\n\n    this.handleNetural = () => {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1\n      }));\n    };\n\n    this.handleBad = () => {\n      this.setState(prevState => ({\n        bad: prevState.bad + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {};\n\n    this.countPositiveFeedbackPercentage = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"feedback_titl\",\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleGood,\n          children: \"Good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleNetural,\n          children: \"Netural\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleBad,\n          children: \"Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"statistic_titl\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statistic_text\",\n        children: [\"Neutral:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistic_result\",\n          children: this.state.neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statistic_text\",\n        children: [\"Good: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistic_result\",\n          children: this.state.good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statistic_text\",\n        children: [\"Bad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistic_result\",\n          children: this.state.bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statistic_text\",\n        children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistic_result\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"statistic_text\",\n        children: [\"Positive feedback: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"statistic_result\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Feedback.propTypes = {\n//   state: PropTypes.shape({\n//     good: PropTypes.number,\n//     neutral: PropTypes.number,\n//     bad: PropTypes.number,\n//   }),\n// };","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/goit-react-hw-02-feedback/src/components/Feedback/Feedback.jsx"],"names":["PropTypes","Component","Feedback","state","good","neutral","bad","handleGood","setState","prevState","handleNetural","handleBad","countTotalFeedback","countPositiveFeedbackPercentage","render"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  handleNetural = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  handleBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {};\r\n\r\n  countPositiveFeedbackPercentage = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main_container\">\r\n        <h1 className=\"feedback_titl\">Please leave feedback</h1>\r\n        <div className=\"btn_container\">\r\n          <button className=\"btn\" onClick={this.handleGood}>\r\n            Good\r\n          </button>\r\n          <button className=\"btn\" onClick={this.handleNetural}>\r\n            Netural\r\n          </button>\r\n          <button className=\"btn\" onClick={this.handleBad}>\r\n            Bad\r\n          </button>\r\n        </div>\r\n        <h2 className=\"statistic_titl\">Statistics</h2>\r\n        <p className=\"statistic_text\">\r\n          Neutral:{' '}\r\n          <span className=\"statistic_result\">{this.state.neutral}</span>\r\n        </p>\r\n        <p className=\"statistic_text\">\r\n          Good: <span className=\"statistic_result\">{this.state.good}</span>\r\n        </p>\r\n        <p className=\"statistic_text\">\r\n          Bad: <span className=\"statistic_result\">{this.state.bad}</span>\r\n        </p>\r\n        <p className=\"statistic_text\">\r\n          Total: <span className=\"statistic_result\">0</span>\r\n        </p>\r\n        <p className=\"statistic_text\">\r\n          Positive feedback: <span className=\"statistic_result\">0</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Feedback.propTypes = {\r\n//   state: PropTypes.shape({\r\n//     good: PropTypes.number,\r\n//     neutral: PropTypes.number,\r\n//     bad: PropTypes.number,\r\n//   }),\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}
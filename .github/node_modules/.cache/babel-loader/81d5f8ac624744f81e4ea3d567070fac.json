{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = e => {\n      const name = e.target.name;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const total = good + neutral + bad;\n      return total;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const total = this.countTotalFeedback(); // const { good } = this.state;\n      // const percentage = (good * 100) / total;\n\n      const percentage = this.state.good * 100 / total;\n      return Math.round(percentage);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const key = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: key,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Section","App","state","good","neutral","bad","onLeaveFeedback","e","name","target","setState","prevState","countTotalFeedback","total","countPositiveFeedbackPercentage","percentage","Math","round","render","positivePercentage","key","Object","keys","height","display","justifyContent","alignItems","fontSize","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCK,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADiC;;AAAA,SAOzCC,eAPyC,GAOvBC,CAAC,IAAI;AACrB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AADA,OAAL,CAAvB;AAGD,KAZwC;;AAAA,SA+BzCI,kBA/ByC,GA+BpB,MAAM;AACzB,YAAM;AAAET,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMW,KAAK,GAAGV,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,aAAOQ,KAAP;AACD,KAnCwC;;AAAA,SAqCzCC,+BArCyC,GAqCP,MAAM;AACtC,YAAMD,KAAK,GAAG,KAAKD,kBAAL,EAAd,CADsC,CAEtC;AACA;;AACA,YAAMG,UAAU,GAAI,KAAKb,KAAL,CAAWC,IAAX,GAAkB,GAAnB,GAA0BU,KAA7C;AACA,aAAOG,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP;AACD,KA3CwC;AAAA;;AA6CzCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMW,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,UAAMO,kBAAkB,GAAG,KAAKL,+BAAL,EAA3B;AAEA,UAAMM,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAjB,CAAZ;AAEA,wBACE;AACE,MAAA,KAAK,EAAE;AACLqB,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,KAAK,EAAE;AANF,OADT;AAAA,8BAUE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAER,GADX;AAEE,UAAA,eAAe,EAAE,KAAKd;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAEQ,KAJT;AAKE,UAAA,kBAAkB,EAAEM;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAhFwC","sourcesContent":["import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Section from './Section';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n  // handleGood = () => {\r\n  //   this.setState(prevState => ({\r\n  //     good: prevState.good + 1,\r\n  //   }));\r\n  // };\r\n\r\n  // handleNetural = () => {\r\n  //   this.setState(prevState => ({\r\n  //     neutral: prevState.neutral + 1,\r\n  //   }));\r\n  // };\r\n\r\n  // handleBad = () => {\r\n  //   this.setState(prevState => ({\r\n  //     bad: prevState.bad + 1,\r\n  //   }));\r\n  // };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    // const { good } = this.state;\r\n    // const percentage = (good * 100) / total;\r\n    const percentage = (this.state.good * 100) / total;\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    const key = Object.keys(this.state);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          fontSize: 40,\r\n          color: '#010101',\r\n        }}\r\n      >\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={key}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
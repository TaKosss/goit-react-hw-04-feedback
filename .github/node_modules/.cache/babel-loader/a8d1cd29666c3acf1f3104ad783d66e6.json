{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\nimport Section from '../Section';\nimport Notification from '../Notification';\nimport { Wrap } from './App.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = e => {\n      const name = e.target.name;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const total = good + neutral + bad;\n      return total;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const total = this.countTotalFeedback();\n      const {\n        good\n      } = this.state;\n      const percentage = good * 100 / total;\n      return Math.round(percentage);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const key = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: key,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: total > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/goit-react-hw-02-feedback/src/components/App/App.jsx"],"names":["Component","FeedbackOptions","Statistics","Section","Notification","Wrap","App","state","good","neutral","bad","onLeaveFeedback","e","name","target","setState","prevState","countTotalFeedback","total","countPositiveFeedbackPercentage","percentage","Math","round","render","positivePercentage","key","Object","keys"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,eAAe,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCO,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADiC;;AAAA,SAOzCC,eAPyC,GAOvBC,CAAC,IAAI;AACrB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AADA,OAAL,CAAvB;AAGD,KAZwC;;AAAA,SAczCI,kBAdyC,GAcpB,MAAM;AACzB,YAAM;AAAET,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMW,KAAK,GAAGV,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,aAAOQ,KAAP;AACD,KAlBwC;;AAAA,SAoBzCC,+BApByC,GAoBP,MAAM;AACtC,YAAMD,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,YAAM;AAAET,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,YAAMa,UAAU,GAAIZ,IAAI,GAAG,GAAR,GAAeU,KAAlC;AACA,aAAOG,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP;AACD,KAzBwC;AAAA;;AA2BzCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMW,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,UAAMO,kBAAkB,GAAG,KAAKL,+BAAL,EAA3B;AAEA,UAAMM,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAjB,CAAZ;AAEA,wBACE,QAAC,IAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEkB,GADX;AAEE,UAAA,eAAe,EAAE,KAAKd;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACGO,KAAK,GAAG,CAAR,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEV,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAEQ,KAJT;AAKE,UAAA,kBAAkB,EAAEM;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAzDwC","sourcesContent":["import { Component } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Section from '../Section';\r\nimport Notification from '../Notification';\r\nimport { Wrap } from './App.styled';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n    const percentage = (good * 100) / total;\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    const key = Object.keys(this.state);\r\n\r\n    return (\r\n      <Wrap>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={key}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"There is no feedback\" />\r\n          )}\r\n        </Section>\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
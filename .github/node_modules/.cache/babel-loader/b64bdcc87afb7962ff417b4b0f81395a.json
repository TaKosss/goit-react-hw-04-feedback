{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleGood = () => {\n      this.setState(prevState => ({\n        good: prevState.good + 1\n      }));\n    };\n\n    this.handleNetural = () => {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1\n      }));\n    };\n\n    this.handleBad = () => {\n      this.setState(prevState => ({\n        bad: prevState.bad + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const total = good + neutral + bad;\n      return total;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const total = this.countTotalFeedback(); // const { good } = this.state;\n      // const percentage = (good * 100) / total;\n\n      const percentage = this.state.good * 100 / total;\n      return Math.round(percentage);\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FeedbackOptions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","FeedbackOptions","Statistics","App","state","good","neutral","bad","handleGood","setState","prevState","handleNetural","handleBad","countTotalFeedback","total","countPositiveFeedbackPercentage","percentage","Math","round","render","positivePercentage","height","display","justifyContent","alignItems","fontSize","color"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAM1BC,UAN0B,GAMb,MAAM;AACjB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BL,QAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,GAAiB;AADG,OAAL,CAAvB;AAGD,KAVyB;;AAAA,SAY1BM,aAZ0B,GAYV,MAAM;AACpB,WAAKF,QAAL,CAAcC,SAAS,KAAK;AAC1BJ,QAAAA,OAAO,EAAEI,SAAS,CAACJ,OAAV,GAAoB;AADH,OAAL,CAAvB;AAGD,KAhByB;;AAAA,SAkB1BM,SAlB0B,GAkBd,MAAM;AAChB,WAAKH,QAAL,CAAcC,SAAS,KAAK;AAC1BH,QAAAA,GAAG,EAAEG,SAAS,CAACH,GAAV,GAAgB;AADK,OAAL,CAAvB;AAGD,KAtByB;;AAAA,SAwB1BM,kBAxB0B,GAwBL,MAAM;AACzB,YAAM;AAAER,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMU,KAAK,GAAGT,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,aAAOO,KAAP;AACD,KA5ByB;;AAAA,SA8B1BC,+BA9B0B,GA8BQ,MAAM;AACtC,YAAMD,KAAK,GAAG,KAAKD,kBAAL,EAAd,CADsC,CAEtC;AACA;;AACA,YAAMG,UAAU,GAAI,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,GAAnB,GAA0BS,KAA7C;AACA,aAAOG,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP;AACD,KApCyB;AAAA;;AAsC1BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMU,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,UAAMO,kBAAkB,GAAG,KAAKL,+BAAL,EAA3B;AAEA,wBACE;AACE,MAAA,KAAK,EAAE;AACLM,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,QAAQ,EAAE,EALL;AAMLC,QAAAA,KAAK,EAAE;AANF,OADT;AAAA,8BAUE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,UAAD;AACE,QAAA,IAAI,EAAErB,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,GAAG,EAAEC,GAHP;AAIE,QAAA,KAAK,EAAEO,KAJT;AAKE,QAAA,kBAAkB,EAAEM;AALtB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAhEyB","sourcesContent":["import { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  handleGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  handleNetural = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  handleBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    // const { good } = this.state;\r\n    // const percentage = (good * 100) / total;\r\n    const percentage = (this.state.good * 100) / total;\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          fontSize: 40,\r\n          color: '#010101',\r\n        }}\r\n      >\r\n        <FeedbackOptions />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}